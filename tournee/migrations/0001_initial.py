# Generated by Django 2.2.7 on 2020-01-22 09:37

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codename', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
                ('last_name', models.CharField(max_length=150)),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('change_message', models.TextField()),
                ('action_flag', models.PositiveSmallIntegerField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GameScores',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team_name', models.CharField(blank=True, db_column='Team Name', max_length=32, null=True)),
                ('team_1_score', models.SmallIntegerField(blank=True, db_column='Team 1 Score', null=True)),
                ('team_2_score', models.SmallIntegerField(blank=True, db_column='Team 2 Score', null=True)),
            ],
            options={
                'db_table': 'Game Scores',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Players',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('player_s_name', models.CharField(blank=True, db_column="Player's Name", max_length=32, null=True)),
                ('player_s_team', models.CharField(blank=True, db_column="Player's Team", max_length=32, null=True)),
                ('username', models.CharField(blank=True, db_column='Username', max_length=32, null=True)),
                ('password', models.CharField(blank=True, db_column='Password', max_length=16, null=True)),
                ('email', models.CharField(blank=True, db_column='Email', max_length=64, null=True)),
                ('bio', models.CharField(blank=True, db_column='Bio', max_length=5000, null=True)),
                ('teamid', models.CharField(blank=True, db_column='TeamID', max_length=8, null=True)),
            ],
            options={
                'db_table': 'Players',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Teams',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team_name', models.CharField(blank=True, db_column='Team Name', max_length=32, null=True)),
                ('players', models.TextField(blank=True, db_column='Players', null=True)),
            ],
            options={
                'db_table': 'Teams',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TournamentResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('result', models.SmallIntegerField(blank=True, db_column='Result', null=True)),
                ('number_of_teams', models.SmallIntegerField(blank=True, db_column='Number of Teams', null=True)),
            ],
            options={
                'db_table': 'Tournament Result',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tournaments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tournament_name', models.CharField(blank=True, db_column='Tournament Name', max_length=64, null=True)),
                ('tournament_prize', models.CharField(blank=True, db_column='Tournament Prize', max_length=5000, null=True)),
                ('winners', models.CharField(blank=True, db_column='Winners', max_length=32, null=True)),
                ('teams', models.TextField(blank=True, db_column='Teams', null=True)),
                ('requirements', models.CharField(blank=True, db_column='Requirements', max_length=5000, null=True)),
                ('rules', models.CharField(blank=True, db_column='Rules', max_length=5000, null=True)),
                ('time_and_date', models.DateTimeField(auto_now_add=True, db_column='Time and Date', null=True)),
                ('scoreboard', models.TextField(blank=True, db_column='Scoreboard', null=True)),
                ('in_progress', models.BooleanField(blank=True, db_column='In Progress', null=True)),
                ('tournamentline', models.IntegerField(blank=True, db_column='TournamentLine', null=True)),
            ],
            options={
                'db_table': 'Tournaments',
                'managed': False,
            },
        ),
    ]
